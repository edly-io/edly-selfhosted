const { Popover } = await import('@typeform/embed-react');
const { getAuthenticatedHttpClient } = await import('@edx/frontend-platform/auth');
const { useState, useEffect } = await import ('react');


const OnboardingSurvey = () => {
    const [showForm, setShowForm] = useState(null);
    const [userData, setUserData] = useState({
      user: '',
      email: ''
    });
    const [loading, setLoading] = useState(true);

    const apiUrl = `${getConfig().LMS_BASE_URL}/api/onboarding-survey/`;

    const handleOnSubmit = () => {
      const updateOnboardingFormStatus = async () => {
        try {
          await getAuthenticatedHttpClient().post(apiUrl, {
            form_filled: true
          })
          localStorage.setItem("form_filled", "true");
        } catch {}
      }

      updateOnboardingFormStatus();
    }

    useEffect(() => {
        const fetchData = async () => {
            try {
                const response = await getAuthenticatedHttpClient().get(apiUrl);
                setShowForm(response.data.show_form);
                setUserData({
                  user: response.data.username, 
                  email: response.data.email
                })

                console.log(response);
                if (!response.data.show_form) {
                  localStorage.setItem("form_filled", "true");
                }
            } catch {
                setShowForm(false); 
            } finally {
                setLoading(false);
            }
        };

        if (!localStorage.getItem("form_filled")) fetchData();
    }, []);

    if (loading) return <></>;

    return showForm ? <Popover id="WHBX8vDV" height="90vh" width="50vw" open="load" hidden={userData} onSubmit={handleOnSubmit}/> : <></>;
}